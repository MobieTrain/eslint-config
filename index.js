module.exports = {
    env: {
      es2021: true,
      node: true,
    },
    extends: [
      'plugin:@typescript-eslint/eslint-recommended',
      'plugin:@typescript-eslint/recommended',
      'plugin:@typescript-eslint/recommended-requiring-type-checking',
      'airbnb-base',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
      ecmaVersion: 2021,
      sourceType: 'module',
      tsconfigRootDir: __dirname,
      project: './tsconfig.json',
      },
    plugins: [
      '@typescript-eslint',
    ],
    rules: {
      'no-shadow': 'off',
      '@typescript-eslint/no-shadow': ['error'],
      "no-redeclare": "off",
      "@typescript-eslint/no-redeclare": ["error"],
      "indent": "off",
      "@typescript-eslint/indent": ["error", 2],
      "no-use-before-define": "off",
      "@typescript-eslint/no-use-before-define": ["error"],
      'no-unused-vars': 'off',
      'import/prefer-default-export': 'off',
      'import/extensions': 'off',
      'import/no-unresolved': 'off',
      'max-len': [
        'warn', // TODO: This should be 'error'
        {
          code: 120,
          ignoreComments: true,
          ignoreTrailingComments: true,
          ignoreStrings: true,
        },
      ],
      'import/no-extraneous-dependencies': ['error', { 'devDependencies': ['**/*.test.ts', '**/*.spec.ts'] }],
      '@typescript-eslint/no-namespace': 'off',
  
      // TODO: Create tickets and check each rule
      "@typescript-eslint/no-use-before-define": ["warn"],
      'no-useless-constructor': 'warn',
      'no-bitwise': 'warn',
      'no-buffer-constructor': 'warn',
      'prefer-destructuring': 'warn',
      'radix': 'warn',
      'global-require': 'warn',
      'no-mixed-operators': 'warn',
      'no-return-assign': 'warn',
      'no-multi-str': 'warn',
      'no-unused-expressions': 'warn',
      'no-cond-assign': 'warn',
      'consistent-return': 'warn',
      'prefer-promise-reject-errors': 'warn',
      'class-methods-use-this': 'warn',
      'no-restricted-syntax': 'warn',
      'no-restricted-properties': 'warn',
      'no-nested-ternary': 'warn',
      'no-throw-literal': 'warn',
      'no-await-in-loop': 'warn',
      'default-case': 'warn',
      'no-return-await': 'warn',
      'no-void': 'warn',
      'no-restricted-globals': 'warn',
      'no-underscore-dangle': 'warn',
      'no-continue': 'warn',
      'guard-for-in': 'warn',
      'array-callback-return': 'warn',
      'no-plusplus': 'warn',
      'no-tabs': 'warn',
      'no-param-reassign': 'warn',
      'camelcase': 'warn',
      'import/no-dynamic-require': ['warn'],
      '@typescript-eslint/await-thenable': ['warn'],
      '@typescript-eslint/no-floating-promises': ['warn'],
      '@typescript-eslint/no-unsafe-assignment': ['warn'],
      '@typescript-eslint/no-unsafe-assignment': ['warn'],
      '@typescript-eslint/no-unsafe-call': ['warn'],
      '@typescript-eslint/no-unsafe-member-access': ['warn'],
      '@typescript-eslint/no-unsafe-return': ['warn'],
      '@typescript-eslint/require-await': ['warn'],
      '@typescript-eslint/restrict-plus-operands': ['warn'],
      '@typescript-eslint/restrict-template-expressions': ['warn'],
      '@typescript-eslint/unbound-method': ['warn'],
      '@typescript-eslint/no-shadow': ['warn'],
      '@typescript-eslint/ban-types': ['warn'],
      '@typescript-eslint/ban-ts-comment': ['warn'],
      '@typescript-eslint/explicit-module-boundary-types': 'off',
      'react/jsx-pascal-case': ['error', { allowNamespace: true }],
      'no-void': ['error', { 'allowAsStatement': true }]
    },
  };
  